apiVersion: apps/v1
kind: Deployment
metadata:
  name: example
  labels:
    app: example
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 200%
      maxUnavailable: 1
  minReadySeconds: 30
  selector:
    matchLabels:
      app: example
  replicas: 3
  template:
    metadata:
      labels:
        app: example
    spec:
      serviceAccountName: default # TBD
      containers:
      - name: app
        image: django-prometheus-example
        ports:
        - name: http-app
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /metrics # fix me
            port: http-app
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /metrics # fix me
            port: http-app
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 2
        envFrom:
        - configMapRef:
            name: example-env
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: example
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: example
            topologyKey: kubernetes.io/hostname
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: example
  labels:
    app: example
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: example
